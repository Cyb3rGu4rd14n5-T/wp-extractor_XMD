#!/bin/bash

# 🔱 cyberguardians-T WP Extractor XMD
# WordPress REST API Scanner for Bug Bounty Recon

clear
echo -e "\e[1;36m"
echo "╔════════════════════════════════════════════════════╗"
echo "║     🔱 cyberguardians-T - WP Extractor XMD         ║"
echo "╚════════════════════════════════════════════════════╝"
echo -e "\e[0m"

# Ask for input
read -p "Enter WordPress site URL (e.g. https://example.com or https://domain.com/blog/): " input

# Extract domain only, strip paths
base_url=$(echo "$input" | sed -E 's#(https?://[^/]+).*#\1#')

echo -e "\n[*] Target base URL: $base_url"
echo "[*] Scanning $base_url/wp-json for exposed API data..."

# Clear previous output
> emails.txt
> usernames.txt
> post_titles.txt

# --- Users Endpoint ---
echo "[+] Checking /wp-json/wp/v2/users for usernames and emails..."
users_json=$(curl -s "$base_url/wp-json/wp/v2/users")

echo "$users_json" | jq -r '.[].name' 2>/dev/null | tee usernames.txt > /dev/null
echo "$users_json" | grep -E -o "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}" | tee emails.txt > /dev/null

# --- Posts Endpoint ---
echo "[+] Checking /wp-json/wp/v2/posts for post titles..."
curl -s "$base_url/wp-json/wp/v2/posts" | jq -r '.[].title.rendered' 2>/dev/null | tee post_titles.txt > /dev/null

# --- Summary Output ---
echo -e "\n✅ Extraction complete!"
echo "📁 usernames.txt   → $(wc -l < usernames.txt) usernames"
echo "📁 emails.txt      → $(wc -l < emails.txt) emails"
echo "📁 post_titles.txt → $(wc -l < post_titles.txt) titles"
